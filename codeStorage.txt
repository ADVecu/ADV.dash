  // Wait for message to be received
  twai_message_t message;
  if (twai_receive(&message, pdMS_TO_TICKS(10000)) == ESP_OK)
  {
    printf("Message received\n");
  }
  else
  {
    printf("Failed to receive message\n");
    return;
  }

  // Process received message
  if (message.extd)
  {
    printf("Message is in Extended Format\n");
  }
  else
  {
    printf("Message is in Standard Format\n");
  }
  printf("ID is %d\n", message.identifier);
  if (!(message.rtr))
  {
    for (int i = 0; i < message.data_length_code; i++)
    {
      printf("Data byte %d = %d\n", i, message.data[i]);
    }
  }

  // twai_message_t message;
  String data;
  String identifier;
  /*if (twai_receive(&message, 0) == ESP_OK) {
    Serial.print("0x");
    Serial.print(message.identifier, HEX);
    Serial.print("\t");
    Serial.print(message.extd);
    Serial.print("\t");
    Serial.print(message.rtr);
    Serial.print("\t");
    Serial.print(message.data_length_code);

    for(int i=0;i<message.data_length_code;i++) {
      Serial.print("\t0x");
      if (message.data[i]<=0x0F) {
        Serial.print(0);
      }
      Serial.print(message.data[i], HEX);
    }
    Serial.println();
  }*/

  if (testTimer4.delayOn(initScreen, 1000))
  {
    _ui_screen_change(&ui_MainScreen, LV_SCR_LOAD_ANIM_OVER_RIGHT, 100, 0, ui_MainScreen_screen_init);

    if (lv_scr_act() == ui_WelcomeScreen)
    {
      initScreen = false;
      _ui_screen_delete(&ui_WelcomeScreen);
    }
  }

  if (lv_scr_act() == ui_MainScreen && true)
  {
    lv_bar_set_value(ui_RpmsBar, random(8, 15), LV_ANIM_OFF);
    lv_label_set_text_fmt(ui_RpmsValue, "%d", random(800, 1500));

    if (lv_bar_get_value(ui_RpmsBar) >= 50 && entry)
    {
      lv_obj_set_style_bg_color(ui_RpmsBar, lv_color_hex(0xFF0000), LV_PART_INDICATOR | LV_STATE_DEFAULT);
      entry = false;
    }

    if (lv_bar_get_value(ui_RpmsBar) >= 100)
    {
      lv_obj_set_style_bg_color(ui_RpmsBar, lv_color_hex(0xFFFFFF), LV_PART_INDICATOR | LV_STATE_DEFAULT);
      entry = true;
      lv_bar_set_value(ui_RpmsBar, 0, LV_ANIM_OFF);
    }

    lv_arc_set_value(ui_Arc1, random(45, 48));
    lv_label_set_text_fmt(ui_ArcValue1, "%d", random(45, 48));

    lv_arc_set_value(ui_Arc2, random(10, 15));
    lv_label_set_text_fmt(ui_ArcValue2, "%d", random(10, 15));
    lv_arc_set_value(ui_Arc4, random(50, 60));
    lv_label_set_text_fmt(ui_ArcValue4, "%d", random(50, 60));

    lv_arc_set_value(ui_MainArc, random(30, 90));
    lv_label_set_text_fmt(ui_MainArcValue, "%d", random(30, 90));

    lv_label_set_text_fmt(ui_PanelValue1, "%d", random(100));

    lv_label_set_text_fmt(ui_PanelValue2, "%d", random(100));
    lv_label_set_text_fmt(ui_PanelValue4, "%d", random(100));
    lv_label_set_text_fmt(ui_PanelValue5, "%d", random(100));

    lv_label_set_text_fmt(ui_SpeedValue, "%d", random(80, 85));

    lv_bar_set_value(ui_TpsBar, random(50, 60), LV_ANIM_OFF);

    if (testTimer.cycleTrigger(500))
    {

      lv_label_set_text_fmt(ui_PanelValue6, "%d", random(90, 98));

      lv_bar_set_value(ui_Bar2, random(50, 52), LV_ANIM_OFF);
      lv_label_set_text_fmt(ui_BarValue2, "%d", random(100));

      lv_label_set_text_fmt(ui_GearValue, "%d", random(7));
    }

    if (testTimer2.cycleTrigger(1000))
    {

      lv_bar_set_value(ui_Bar1, random(80, 82), LV_ANIM_OFF);
      lv_label_set_text_fmt(ui_BarValue1, "%d", random(80, 82));

      lv_bar_set_value(ui_Bar3, random(40, 50), LV_ANIM_OFF);
      lv_label_set_text_fmt(ui_BarValue2, "%d", random(40, 50));

      lv_bar_set_value(ui_Bar4, random(70, 75), LV_ANIM_OFF);
      lv_label_set_text_fmt(ui_BarValue4, "%d", random(70, 75));

      lv_arc_set_value(ui_Arc3, random(95, 105));
      lv_label_set_text_fmt(ui_ArcValue3, "%d", random(95, 105));

      lv_label_set_text_fmt(ui_PanelValue3, "%d", random(85, 87));
    }
  }

  if (lv_scr_act() == ui_Screen2 && true)
  {
    /* if(twai_receive(&message, 0)  ==  ESP_OK){
       lv_label_set_text_fmt(ui_mID, "ID: 0x%08X", message.identifier);
       lv_label_set_text_fmt(ui_mData, "Data: 0x%02X", message.data);
       }*/
  }
