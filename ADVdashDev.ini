
;enable2ndByteCanID = false

[MegaTune]
   MTversion      = 2.25

   queryCommand   = "Q"
   signature      = "ADVdash 2024dev"
   versionInfo    = "S" ;This info is what is displayed to user

[TunerStudio]
   iniSpecVersion = 3.64
   useLegacyFTempUnits = false

;-------------------------------------------------------------------------------

[SettingGroups]
   ; the referenceName will over-ride previous, so if you are creating a
   ; settingGroup with a reference name of lambdaSensor, it will replace the
   ; setting group defined in the settingGroups.xml of the TunerStudio config
   ; folder. If is is an undefined referenceName, it will be added.
   ; keyword    =  referenceName,  DisplayName


[PcVariables]
   ; valid types: boolean, double, int, list
   ;
   ; no offset as they are local variables.
   ; entry format the same as Constants, except there is no offset.
   ; arrays are not yet supported.
   ; name = class,  type,    shape,  units,       scale, translate,    lo,      hi, digits
   ; name = type, min, max;
   ;
   ; type List: value will be index.

    tsCanId          = bits,     U08,   [0:3], "CAN ID 0", "CAN ID 1", "CAN ID 2", "CAN ID 3", "CAN ID 4", "CAN ID 5", "CAN ID 6", "CAN ID 7", "CAN ID 8", "CAN ID 9", "CAN ID 10","CAN ID 11","CAN ID 12","CAN ID 13","CAN ID 14","INVALID"
   
[Constants]

   ;----------------------------------------------------------------------------
   ; Constants Definition
   ; --------------------
   ;
   ; Scalar Values
   ; -------------
   ; The scaling and translation values are used as follows:
   ;    msValue   = userValue / scale - translate
   ;    userValue = (msValue + translate) * scale
   ;
   ;
   ; Temperatures are fine, check out the Fielding IAC example (fastIdleT).
   ;
   ; Array Values
   ; ------------
   ; Arrays are specified just like scalars, except that they have a "shape"
   ; entry in the fourth parameter.  The shape allows you to define lists or
   ; tables, for example [8] defines a list with eight values and [2x4] defines
   ; a table with eight values (two rows and four columns).  Tables may be
   ; stored in either "X-" or "Y-order."  X-order means that memory is laid
   ; out like.
   ;
   ;     [x1,y1] [x2,y1]...[xn,y1] [x1,y2]...
   ;
   ; Y-order would be
   ;
   ;     [x1,y1] [x1,y2]...[x1,yn] [x2,y1]...
   ;
   ; To use the TableEditor, you must define two lists and a table, and
   ; the lengths of the lists must correspond to the shape of the table.
   ;
   ; Bit Fields
   ; ----------
   ; Bits are numbered 0-7, the rightmost being bit zero.  The basic
   ; data word that stores bit fields must be unsigned.
   ;
   ; You need NOT supply the correct number of labels matching the
   ; number of bits you've specified (one bit requires 2 values, two
   ; bits requires 4 values and so on).  If you neglect to supply enough
   ; labels, they will be synthesised using the sequence "1", "2" and so
   ; on based upon their position in the sequence (the cltType and matType
   ; will end up with identical lists).
   ;
   ; If you specify a label as "INVALID" (all upper case), then it will
   ; not be displayed in the combo box, so you can leave out values that
   ; make no sense.
   ;
   ;----------------------------------------------------------------------------

    endianness          = little
    nPages              = 1
    pageSize            = 256

    ; New commands
    pageIdentifier      = "\$tsCanId\x01"
    pageReadCommand     = "p%2i%2o%2c"
    pageValueWrite      = "M%2i%2o%2c%v"
    pageChunkWrite      = "M%2i%2o%2c%v"
    crc32CheckCommand   = "d%2i"

    burnCommand         = "b%2i"

    blockingFactor = 251 ; Serial buffer is 257 bytes and there are 6 bytes of overhead (2 for the size and 4 for the CRC). Total payload is therefore 257-6=251.

    delayAfterPortOpen=1000
    ;validateArrayBounds = true
    blockReadTimeout = 2000
    tsWriteBlocks = on
    interWriteDelay = 10 ;Ignored when tsWriteBlocks is on
    pageActivationDelay = 10
    restrictSquirtRelationship = false ;This requires TS 3.1 or above

    messageEnvelopeFormat = msEnvelope_1.0 ;New and testing only
    tableCrcCommand     = "k\$tsCanId%2i%2o%2c" ;TS can only use this command in new mode

    readSdCompressed = false

  
;--------------------------------------------------
;Start Page 1
;Page 1 is all general settings. Note that some of these (algorithm and ignAlgorithm) MUST come before their use in the bitStringValue() calls in the fuel and ignition tables
;--------------------------------------------------
page = 1
      rpmsWarning  = scalar, U16,       0,         "Rpms",        1,       0.0,   3000,    8000,      0
      rpmsRedLine  = scalar, U16,       2,         "Rpms",        1,       0.0,   3000,    20000,      0
;-------------------------------------------------------------------------------

[EventTriggers]
      

[ConstantsExtensions]
    

[Menu]

   ;----------------------------------------------------------------------------
   ;  There are five pre-defined values that may be used to define your menus.
   ;  The first four allow access to the "standard" dialog boxes, the last one
   ;  merely draws a separator (horizontal line) in the menu.
   ;
   ;     std_constants
   ;     std_enrichments
   ;     std_realtime
   ;     std_warmup
   ;
   ;     std_separator
   ;
   ;  If you use any of the std_constants, std_enrichments or std_warmup
   ;  editors, they may be optionally suffixed with a page number (only
   ;  useful for multi-page code variants), which causes them to edit the
   ;  specified page.  If you leave off the page specifier, they edit logical
   ;  page one as specified in the Constants section.
   ;
   ;  There are four special menu names, which when used append to the standard
   ;  menus of the same name instead of creating a new one.  The menu names
   ;  are "File", "Communications", "Tools" and "Help".
   ;
   ;----------------------------------------------------------------------------

menuDialog = main
   menu = "&Settings"
      subMenu = sensor_settings, "Sensor settings"
      subMenu = can_settings, "CAN AFR settings"
      subMenu = can_egt_settings, "CAN EGT settings"

   menu = "Outputs"
      subMenu = auxOut0, "AUX analog output 0"
      subMenu = auxOut1, "AUX analog output 1"

   menu = "&Controller"
      subMenu = ecuTools, "ECU tools"
;-------------------------------------------------------------------------------

[SettingContextHelp]
; constantName = "Help Text"
; These provide the context help in the dialog when these variables are used
  
[UserDefined]

; Enhanced TunerStudio dialogs can be defined here
; MegaTune will over look this section
; These dialogs will over-ride those in the UserDefined Section
; User defined ar loaded first, then if one by the same name is defined here,
; it will replace the MegaTune definition

; dialog = name,   Title, Layout
;
; valid options for layout are xAxis, yAxis, border
; for an xAxis, each field added will be added from right to left
; A yAxis layout will add fields from top to bottom
; A border layout will expect an additional constraint to determine placement
; valid border constraints are north, South, East, West, Center
; all 5 do not need to be filled.

; The field name can be either a constant reference, or a reference to another
; dialog which will be added.
; dialogs can be nested and can be mixed with fields

;------------------------------------------------------------------------------

[ControllerCommands]
; commandName    = command1, command2, commandn...
; command in standard ini format, a command name can be assigned to 1 to n commands that will be executed in order.
;         This does not include any resultant protocol envelope data, only the response data itself.

; WARNING!! These commands bypass TunerStudio's normal memory synchronization. If these commands
; alter mapped settings (Constant) memory in the controller, TunerStudio will have an out of sync condition
; and may create error messages.
; It is expected that these commands would not typically alter any ram mapped to a Constant.


[CurveEditor]


[TableEditor]
   
;-------------------------------------------------------------------------------

[GaugeConfigurations]

   ;-------------------------------------------------------------------------------
   ; Define a gauge's characteristics here, then go to a specific layout
   ; block (Tuning or FrontPage) and use the name you've defined here to
   ; display that gauge in a particular position.
   ;
   ; Name  = Case-sensitive, user-defined name for this gauge configuration.
   ; Var   = Case-sensitive name of variable to be displayed, see the
   ;         OutputChannels block in this file for possible values.
   ; Title = Title displayed at the top of the gauge.
   ; Units = Units displayed below value on gauge.
   ; Lo    = Lower scale limit of gauge.
   ; Hi    = Upper scale limit of gauge.
   ; LoD   = Lower limit at which danger color is used for gauge background.
   ; LoW   = Lower limit at which warning color is used.
   ; HiW   = Upper limit at which warning color is used.
   ; HiD   = Upper limit at which danger color is used.
   ; vd    = Decimal places in displayed value
   ; ld    = Label decimal places for display of Lo and Hi, above.

    gaugeCategory = Main
    ;Name               Var            Title                 Units     Lo     Hi     LoD    LoW   HiW   HiD vd ld
    AatGauge   = AmbientTemperature,   "Ambient Temperature",       "C",    -40,   120,    -15,     0,   95,  105, 0, 0
   ;-------------------------------------------------------------------------------

[FrontPage]


   ; Gauges are numbered left to right, top to bottom.
   ;
   ;    1  2  3  4
   ;    5  6  7  8

   gauge1 = AatGauge
   gauge2 = AatGauge
   

   ;----------------------------------------------------------------------------
   ; Indicators
   ;             expr                   off-label       on-label,       off-bg, off-fg, on-bg,  on-fg
   
;-------------------------------------------------------------------------------

[OutputChannels]
  ; The number of bytes MegaTune or TunerStudio should expect as a result
  ; of sending the "A" command to Speeduino is determined
  ; by the value of ochBlockSize, so be very careful when
  ; you change it.

  ochGetCommand    = "r\$tsCanId\x30%2o%2c"
  ochBlockSize     =  127

  AmbientTemperature         = scalar, U08,  0, "C",    1.0,    0
;-------------------------------------------------------------------------------

[Datalog]
  
[LoggerDefinition]
    ; valid logger types: composite, tooth, trigger, csv

[ReferenceTables]
   
[Tools]
  ;addTool = toolName, PanelName
  
[VeAnalyze]
  
[WueAnalyze]
